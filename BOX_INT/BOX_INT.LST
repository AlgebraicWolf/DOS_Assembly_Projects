Turbo Assembler	 Version 4.1	    03/03/20 18:11:32	    Page 1
box_int.asm



      1				     .186
      2
      3	0000			     .model tiny
      4
      5				     locals @@
      6
      7	0000			     .data
      8	0000  41 58 3A 20 58 58	58+  AX_text  db "AX: XXXX"
      9	      58
     10	0008  42 58 3A 20 58 58	58+  BX_text  db "BX: XXXX"
     11	      58
     12	0010  43 58 3A 20 58 58	58+  CX_text  db "CX: XXXX"
     13	      58
     14	0018  44 58 3A 20 58 58	58+  DX_text  db "DX: XXXX"
     15	      58
     16	0020  00000000		     old_int08h	      dd 0
     17	0024			     EndLabel:
     18	      =3100		     tsr_mode	     equ 3100h
     19	      =0020		     int08h_addr     equ     8*4
     20	0024			     .code
     21				     org 100h
     22
     23	0100			     Start:
     24	0100  33 C0				     xor ax,ax
     25	0102  8E C0				     mov es,ax
     26
     27	0104  FA				     cli ; Disable INTs
     28	0105  BB 0020				     mov bx, int08h_addr ; Save	address	of int08h handler
     29	0108  26: 8B 07				     mov ax, word ptr es:[bx]
     30	010B  26: 8B 4F	02			     mov cx, word ptr es:[bx+2]
     31	010F  2E: A3 0020r			     mov word ptr cs:[old_int08h], ax ;	Save pointer to	old handler
     32	0113  2E: 89 0E	0022r			     mov word ptr cs:[old_int08h + 2], cx
     33	0118  26: C7 07	0139r			     mov word ptr es:[bx], offset Int08hHandler	; Rewrite handler
     34	011D  8C C8				     mov ax, cs
     35	011F  26: 89 47	02			     mov word ptr es:[bx+2], ax
     36	0123  FB				     sti ; Enable INTs
     37
     38	0124  B8 1003			     mov ax, 1003h
     39	0127  B3 00				     mov bl, 0h
     40	0129  CD 10				     int 10h
     41
     42						     ;pushf
     43						     ;call cs:[Int08hHandler]
     44
     45	012B  B8 3100				     mov ax, tsr_mode ;	DOS function to	enable TSR
     46	012E  BA 0024r				     mov dx, offset EndLabel ; Get program size
     47	0131  C1 EA 04				     shr dx, 4 ; Turn it into segment
     48	0134  83 C2 08				     add dx, 8 ; Ceiling
     49	0137  CD 21				     int 21h ; Call function
     50
     51					     ;call WriteRegisters
     52					     ;int 20h
     53
     54
     55	0139			     Int08hHandler   proc
     56	0139  57 53 50 51 52 06	1E+		     push di bx	ax cx dx es ds si bp
     57	      56 55
Turbo Assembler	 Version 4.1	    03/03/20 18:11:32	    Page 2
box_int.asm



     58	0142  9C				     pushf
     59	0143  2E: FF 1E	0020r			     call dword	ptr cs:[old_int08h]
     60	0148  E8 0072				     call WriteRegisters
     61	014B  5D 5E 1F 07 5A 59	58+		     pop bp si ds es dx	cx ax bx di
     62	      5B 5F
     63	0154  CF				     iret
     64	0155			     Int08hHandler   endp
     65
     66				     ;================================================
     67				     ; Function	that saves register value to memory
     68				     ; ENTER: DI - Pointer to memory pos
     69				     ;		      AX - Register to save
     70				     ; DESTR: DI
     71				     ;================================================
     72
     73
     74	0155			     UpdateRegister  proc
     75	0155  50				     push ax
     76	0156  C1 E8 0C				     shr ax, 12
     77						     ;mov di, AX_text
     78	0159  83 C7 04				     add di, 4
     79	015C  E8 004D				     call WriteRegister
     80
     81	015F  58				     pop ax
     82	0160  50				     push ax
     83
     84	0161  C1 E0 04				     shl ax, 4
     85	0164  C1 E8 0C				     shr ax, 12
     86	0167  83 C7 01				     add di, 1
     87	016A  E8 003F				     call WriteRegister
     88
     89	016D  58				     pop ax
     90	016E  50				     push ax
     91
     92	016F  C1 E0 08				     shl ax, 8
     93	0172  C1 E8 0C				     shr ax, 12
     94	0175  83 C7 01				     add di, 1
     95	0178  E8 0031				     call WriteRegister
     96
     97	017B  58				     pop ax
     98	017C  50				     push ax
     99
    100	017D  C1 E0 0C				     shl ax, 12
    101	0180  C1 E8 0C				     shr ax, 12
    102	0183  83 C7 01				     add di, 1
    103	0186  E8 0023				     call WriteRegister
    104
    105	0189  58				     pop ax
    106	018A  C3				     ret
    107	018B			     UpdateRegister endp
    108
    109				     ;================================================
    110				     ; Function	that writes register values to proper
    111				     ; positions
    112				     ; ENTER: AX, BX, CX, DX - Values
    113				     ; DESTR:
    114				     ;================================================
Turbo Assembler	 Version 4.1	    03/03/20 18:11:32	    Page 3
box_int.asm



    115
    116	018B			     UpdateRegisters proc
    117	018B  50				     push ax
    118	018C  BF 0000r				     mov di, offset AX_text
    119	018F  E8 FFC3				     call UpdateRegister
    120
    121	0192  BF 0008r				     mov di, offset BX_text
    122	0195  8B C3				     mov ax, bx
    123	0197  E8 FFBB				     call UpdateRegister
    124
    125	019A  BF 0010r				     mov di, offset CX_text
    126	019D  8B C1				     mov ax, cx
    127	019F  E8 FFB3				     call UpdateRegister
    128
    129	01A2  BF 0018r				     mov di, offset DX_text
    130	01A5  8B C2				     mov ax, dx
    131	01A7  E8 FFAB				     call UpdateRegister
    132	01AA  58				     pop ax
    133	01AB  C3				     ret
    134	01AC			     UpdateRegisters endp
    135
    136				     ;================================================
    137				     ; Function	that translates	number in register
    138				     ; into a single HEX digit
    139				     ; ENTER: DI - Where to save digit
    140				     ;		      AX - Digit
    141				     ; EXIT: CS:[DI] - Desired character
    142				     ;================================================
    143
    144	01AC			     WriteRegister   proc
    145	01AC  2E: C6 05	30			     mov byte ptr cs:[di], 48
    146	01B0  2E: 00 05				     add byte ptr cs:[di], al
    147	01B3  3D 000A				     cmp ax, 10
    148	01B6  72 04				     jb	@@SkipLetter
    149	01B8  2E: 80 05	07			     add byte ptr cs:[di], ะต7
    150	01BC			     @@SkipLetter:
    151	01BC  C3				     ret
    152	01BD			     WriteRegister   endp
    153
    154				     ;================================================
    155				     ; Function	that performs all the routine
    156				     ; DESTR: ES, DI, DX, CX, AX, BX
    157				     ;================================================
    158
    159	01BD			     WriteRegisters proc
    160	01BD  FC				     cld
    161	01BE  E8 FFCA				     call UpdateRegisters
    162	01C1  68 B800			     push 0b800h
    163	01C4  07			     pop es
    164	01C5  33 FF			     xor di, di
    165	01C7  BA 0006			     mov dx, 6d
    166	01CA  B9 000A			     mov cx, 10d
    167	01CD  B4 27			     mov ah, 00100111b
    168	01CF  B0 AE			     mov al, 10101110b
    169	01D1  E8 0000e			     call DrawBox
    170	01D4  BF 00A2			     mov di, 162d
    171	01D7  0E				     push cs
Turbo Assembler	 Version 4.1	    03/03/20 18:11:32	    Page 4
box_int.asm



    172	01D8  1F				     pop ds
    173
    174	01D9  B9 0008			     mov cx, 8d
    175	01DC  BE 0000r			     mov si, cs:[offset	AX_text]
    176	01DF  E8 0000e			     call WriteText
    177
    178	01E2  81 C7 0090		     add di, 144d
    179	01E6  B9 0008			     mov cx, 8d
    180	01E9  E8 0000e			     call WriteText
    181
    182	01EC  81 C7 0090		     add di, 144d
    183	01F0  B9 0008			     mov cx, 8d
    184	01F3  E8 0000e			     call WriteText
    185
    186
    187	01F6  81 C7 0090		     add di, 144d
    188	01FA  B9 0008			     mov cx, 8d
    189	01FD  E8 0000e			     call WriteText
    190	0200  C3			     ret
    191	0201			     WriteRegisters endp
    192
    193				     extrn WriteText:proc
    194				     extrn CastShadow:proc
    195				     extrn DrawBox:proc
    196				     extrn DrawHorLine:proc
    197
    198				     end Start
Turbo Assembler	 Version 4.1	    03/03/20 18:11:32	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/03/20"
??FILENAME			  Text	 "box_int "
??TIME				  Text	 "18:11:32"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@SKIPLETTER			  Near	 DGROUP:01BC
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0103H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 BOX_INT
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
AX_TEXT				  Byte	 DGROUP:0000
BX_TEXT				  Byte	 DGROUP:0008
CASTSHADOW			  Near	 DGROUP:---- Extern
CX_TEXT				  Byte	 DGROUP:0010
DRAWBOX				  Near	 DGROUP:---- Extern
DRAWHORLINE			  Near	 DGROUP:---- Extern
DX_TEXT				  Byte	 DGROUP:0018
ENDLABEL			  Near	 DGROUP:0024
INT08HHANDLER			  Near	 DGROUP:0139
INT08H_ADDR			  Number 0020
OLD_INT08H			  Dword	 DGROUP:0020
START				  Near	 DGROUP:0100
TSR_MODE			  Number 3100
UPDATEREGISTER			  Near	 DGROUP:0155
UPDATEREGISTERS			  Near	 DGROUP:018B
WRITEREGISTER			  Near	 DGROUP:01AC
WRITEREGISTERS			  Near	 DGROUP:01BD
WRITETEXT			  Near	 DGROUP:---- Extern

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0024 Word	  Public  DATA
  _TEXT				  16  0201 Word	  Public  CODE
